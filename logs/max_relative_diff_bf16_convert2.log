Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:00<00:01,  2.49it/s]Loading checkpoint shards:  50%|█████     | 2/4 [00:00<00:00,  2.61it/s]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:01<00:00,  2.67it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:01<00:00,  2.76it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:01<00:00,  2.70it/s]
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
INFO:sentence_transformers.SentenceTransformer:Load pretrained SentenceTransformer: BAAI/bge-small-en-v1.5
Load pretrained SentenceTransformer: BAAI/bge-small-en-v1.5
/home/intel/miniforge3/envs/turborag/lib/python3.10/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
INFO:sentence_transformers.SentenceTransformer:2 prompts are loaded, with the keys: ['query', 'text']
2 prompts are loaded, with the keys: ['query', 'text']
INFO:llama_index.core.indices.loading:Loading all indices.
Loading all indices.
USE_CHUNK_CACHE=test_reverse_RoPE
Batches:   0%|          | 0/1 [00:00<?, ?it/s]Batches: 100%|██████████| 1/1 [00:00<00:00,  6.64it/s]Batches: 100%|██████████| 1/1 [00:00<00:00,  6.63it/s]
/home/intel/miniforge3/envs/turborag/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:492: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.7` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/home/intel/miniforge3/envs/turborag/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:497: UserWarning: `do_sample` is set to `False`. However, `top_p` is set to `0.8` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_p`.
  warnings.warn(
/home/intel/miniforge3/envs/turborag/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:509: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `20` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
The `seen_tokens` attribute is deprecated and will be removed in v4.41. Use the `cache_position` model input instead.
prefix_ids len=88
chunk_token_count_list = [88], chunk sum (except prefix) = 88
query_ids = 11
chunk_str_ids = 4084
input_ids = 4101
type past_kvcache = <class 'NoneType'>
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2688.,  672.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0027, 0.0007, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2688.,  672.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0027, 0.0007, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2688.,  672.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0027, 0.0007, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2688.,  672.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0027, 0.0007, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2688.,  672.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0027, 0.0007, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2688.,  672.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0027, 0.0007, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2688.,  672.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0027, 0.0007, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2688.,  672.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0027, 0.0007, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2688.,  672.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0027, 0.0007, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 2688.,  672.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0027, 0.0007], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4480., 3248.,  290.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0045, 0.0033, 0.0003], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4960., 1224.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0049, 0.0012, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6112., 1224., 1224.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0061, 0.0012, 0.0012], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([7328., 3856., 2256.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0073, 0.0038, 0.0023], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2224.,  672.,  374.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0007, 0.0004], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480.,  976.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0010, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3248., 3168., 1280.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0033, 0.0032, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2688., 1040.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0027, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6880., 2480., 1984.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0069, 0.0025, 0.0020], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6496., 1928., 1832.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0065, 0.0019, 0.0018], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([458., 336.,  92.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0005, 0.0003, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 8.6427e-06], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([6432., 1720., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0064, 0.0017, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([5504., 3856., 3024.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0055, 0.0038, 0.0030], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2352., 1280.,  964.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0013, 0.0010], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4128., 2448.,  896.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0041, 0.0024, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1112., 1088.,  596.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0011, 0.0011, 0.0006], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3856., 3248., 3248.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0038, 0.0033, 0.0033], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2896., 2384., 1344.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0029, 0.0024, 0.0013], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2480., 1296.,  936.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0025, 0.0013, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2176.,  948.,  872.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0022, 0.0009, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1832.,  880.,  780.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0018, 0.0009, 0.0008], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([4352., 1496., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0043, 0.0015, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2320., 2016., 1056.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0023, 0.0020, 0.0011], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([2448., 2176., 1496.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0024, 0.0022, 0.0015], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([3056., 2176.,  916.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0031, 0.0022, 0.0009], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([8064., 6112., 4352.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0081, 0.0061, 0.0043], dtype=torch.bfloat16)
Corresponding denominators (abs(key_states) + 1e-6): tensor([9.9838e-07, 9.9838e-07, 9.9838e-07], dtype=torch.bfloat16)
key_states and key_states2 are NOT approximately equal.
type k cache = torch.bfloat16
Top 3 relative differences: tensor([1528., 1304.,  688.], dtype=torch.bfloat16)
Corresponding numerators (diff): tensor([0.0015, 0.0013, 0.0007], dtype=torch.bfloat16)
